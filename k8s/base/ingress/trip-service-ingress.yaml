apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trip-service-main-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"  # HTTP 허용 (개발시)
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"  # HTTPS 강제 (운영시)
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    # CORS 설정
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
spec:
  ingressClassName: nginx
  rules:
  # Frontend 도메인
  - host: trip-service.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-frontend
            port:
              number: 80

  # API 도메인
  - host: api.trip-service.local
    http:
      paths:
      # Currency Service
      - path: /currency
        pathType: Prefix
        backend:
          service:
            name: service-currency
            port:
              number: 8000

      # History Service
      - path: /history
        pathType: Prefix
        backend:
          service:
            name: service-history
            port:
              number: 8000

      # Ranking Service
      - path: /ranking
        pathType: Prefix
        backend:
          service:
            name: service-ranking
            port:
              number: 8000

      # Data Ingestor Service (CronJob - No HTTP endpoint)
      # - path: /dataingestor
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: service-dataingestor
      #       port:
      #         number: 8000

      # Health Check Endpoint
      - path: /health
        pathType: Prefix
        backend:
          service:
            name: service-currency  # 대표 서비스로 health check
            port:
              number: 8000

---
# 관리도구용 Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: trip-service-admin-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # 관리도구는 인증 추가 (기본 인증)
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Trip Service Admin'
spec:
  rules:
  # Kafka UI
  - host: kafka-ui.trip-service.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: service-kafka-ui
            port:
              number: 8080

  # ArgoCD (설치된 경우)
  - host: argocd.trip-service.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              number: 80

---
# 기본 인증용 Secret (관리도구 접근용)
apiVersion: v1
kind: Secret
metadata:
  name: basic-auth
type: Opaque
data:
  # htpasswd로 생성된 인증 정보
  # 예시: admin / admin123
  # htpasswd -c auth admin
  # echo -n $(cat auth) | base64
  auth: YWRtaW46JGFwcjEkSDY1dTEuU2wkZVllUlFoeXNGZUF1VjBLc1RHdEtCMA==
  # 실제 사용 시 강력한 패스워드로 변경 필요